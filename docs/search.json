[{"path":"https://hauselin.github.io/chatlogr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 chatlogr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://hauselin.github.io/chatlogr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"https://hauselin.github.io/chatlogr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"person, c) c= (2024). chatlogr: Chat Log Parser. R package version 0.0.0.9000.","code":"@Manual{,   title = {chatlogr: Chat Log Parser},   author = {{person} and comment = c)},   year = {2024},   note = {R package version 0.0.0.9000}, }"},{"path":"https://hauselin.github.io/chatlogr/index.html","id":"chatlogr","dir":"","previous_headings":"","what":"Chat Log R Library","title":"Chat Log R Library","text":"goal chatlogr …","code":""},{"path":"https://hauselin.github.io/chatlogr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Chat Log R Library","text":"can install development version chatlogr like :","code":"# FILL THIS IN! HOW CAN PEOPLE INSTALL YOUR DEV PACKAGE?"},{"path":"https://hauselin.github.io/chatlogr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Chat Log R Library","text":"basic example shows solve common problem: special using README.Rmd instead just README.md? can include R chunks like :","code":"library(chatlogr) ## basic example code"},{"path":"https://hauselin.github.io/chatlogr/reference/get_failed_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ids whose data have failed to parse — get_failed_ids","title":"Get ids whose data have failed to parse — get_failed_ids","text":"Get ids whose data failed parse","code":""},{"path":"https://hauselin.github.io/chatlogr/reference/get_failed_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ids whose data have failed to parse — get_failed_ids","text":"","code":"get_failed_ids(chatdata)"},{"path":"https://hauselin.github.io/chatlogr/reference/get_failed_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ids whose data have failed to parse — get_failed_ids","text":"chatdata Chat data parse_users_chat_data.","code":""},{"path":"https://hauselin.github.io/chatlogr/reference/get_failed_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get ids whose data have failed to parse — get_failed_ids","text":"vector user ids.","code":""},{"path":"https://hauselin.github.io/chatlogr/reference/get_failed_ids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get ids whose data have failed to parse — get_failed_ids","text":"","code":"csv_file <- file.path(system.file(\"extdata\", package = \"chatlogr\"), \"mtcars.csv\") chatdata <- parse_users_chat_data(csv_file, \"user_id\", nrows = 5) #> Sampling 5 rows... #> Processing 5 rows... #> Parsing summary/status #>    total  success   errors warnings  #>        5        0       23        0  get_failed_ids(chatdata) #> [1]  5  6 12 13 23"},{"path":"https://hauselin.github.io/chatlogr/reference/get_success_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ids whose data have been parsed sucessfully — get_success_ids","title":"Get ids whose data have been parsed sucessfully — get_success_ids","text":"Get ids whose data parsed sucessfully","code":""},{"path":"https://hauselin.github.io/chatlogr/reference/get_success_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ids whose data have been parsed sucessfully — get_success_ids","text":"","code":"get_success_ids(chatdata)"},{"path":"https://hauselin.github.io/chatlogr/reference/get_success_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ids whose data have been parsed sucessfully — get_success_ids","text":"chatdata Chat data parse_users_chat_data.","code":""},{"path":"https://hauselin.github.io/chatlogr/reference/get_success_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get ids whose data have been parsed sucessfully — get_success_ids","text":"vector user ids.","code":""},{"path":"https://hauselin.github.io/chatlogr/reference/get_success_ids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get ids whose data have been parsed sucessfully — get_success_ids","text":"","code":"csv_file <- file.path(system.file(\"extdata\", package = \"chatlogr\"), \"mtcars.csv\") chatdata <- parse_users_chat_data(csv_file, \"user_id\") #> Processing 32 rows... #> Parsing summary/status #>    total  success   errors warnings  #>       32        0       32        0  get_success_ids(chatdata) #> numeric(0)"},{"path":"https://hauselin.github.io/chatlogr/reference/get_user_chat.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and view chat history of a user — get_user_chat","title":"Get and view chat history of a user — get_user_chat","text":"Get view chat history user","code":""},{"path":"https://hauselin.github.io/chatlogr/reference/get_user_chat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and view chat history of a user — get_user_chat","text":"","code":"get_user_chat(chatdata, user_id = NULL, random_user = FALSE)"},{"path":"https://hauselin.github.io/chatlogr/reference/get_user_chat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and view chat history of a user — get_user_chat","text":"chatdata Chat data parse_users_chat_data. user_id user ID character. Default NULL. random_user logical value. TRUE, random user selected. Default FALSE.","code":""},{"path":"https://hauselin.github.io/chatlogr/reference/get_user_chat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and view chat history of a user — get_user_chat","text":"Chat history user tibble.","code":""},{"path":"https://hauselin.github.io/chatlogr/reference/get_user_chat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and view chat history of a user — get_user_chat","text":"","code":"csv_file <- file.path(system.file(\"extdata\", package = \"chatlogr\"), \"mtcars.csv\") chatdata <- parse_users_chat_data(csv_file, \"user_id\") #> Processing 32 rows... #> Parsing summary/status #>    total  success   errors warnings  #>       32        0       32        0  get_user_chat(chatdata, user_id = 1) #> Chat history for user 1 #> -------------------- #> NA (1 words): ab #>  #> -------------------- #> # A tibble: 1 × 6 #>   user_id role  content createdAt id    n_words #>     <dbl> <lgl> <chr>   <lgl>     <lgl>   <int> #> 1       1 NA    ab      NA        NA          1"},{"path":"https://hauselin.github.io/chatlogr/reference/parse_user_chat_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a single user's raw chat data — parse_user_chat_data","title":"Parse a single user's raw chat data — parse_user_chat_data","text":"Parse single user's raw chat data","code":""},{"path":"https://hauselin.github.io/chatlogr/reference/parse_user_chat_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a single user's raw chat data — parse_user_chat_data","text":"","code":"parse_user_chat_data(   user_chat_data,   user_id,   join_str = \"\\\"\\\"\",   verbose = TRUE )"},{"path":"https://hauselin.github.io/chatlogr/reference/parse_user_chat_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a single user's raw chat data — parse_user_chat_data","text":"user_chat_data Raw chat data single user. Must include chat data columns. user_id User ID character. join_str Join string character. Defaults '\\\"\\\"'. verbose Logical. Defaults TRUE.","code":""},{"path":"https://hauselin.github.io/chatlogr/reference/parse_user_chat_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a single user's raw chat data — parse_user_chat_data","text":"JSON data list.","code":""},{"path":"https://hauselin.github.io/chatlogr/reference/parse_user_chat_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse a single user's raw chat data — parse_user_chat_data","text":"","code":"csv_file <- file.path(system.file(\"extdata\", package = \"chatlogr\"), \"mtcars.csv\") user_chat_data <- read_relevant_data_columns(csv_file, \"user_id\", \"chathistory\")[1, ] user_chatdata <- parse_user_chat_data(user_chat_data, \"vs\", join_str = '\\\"\\\"') #> vs has 3 cells #> - status: error: json validation error"},{"path":"https://hauselin.github.io/chatlogr/reference/parse_users_chat_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse all user data — parse_users_chat_data","title":"Parse all user data — parse_users_chat_data","text":"Parse user data","code":""},{"path":"https://hauselin.github.io/chatlogr/reference/parse_users_chat_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse all user data — parse_users_chat_data","text":"","code":"parse_users_chat_data(   csv_file,   idcol = \"ResponseId\",   chat_col_patterns = c(\"chathistory\"),   chat_cols = \"\",   join_str = \"\\\"\\\"\",   nrows = Inf,   verbose = FALSE )"},{"path":"https://hauselin.github.io/chatlogr/reference/parse_users_chat_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse all user data — parse_users_chat_data","text":"csv_file Path csv file character. idcol Name column user ID column character. Must contain unique values. chat_col_patterns Patterns match chat columns character. Defaults \"chathistory\". chat_cols Chat columns character. Defaults \"\". join_str Join string character. Defaults '\\\"\\\"'. nrows Number rows process. Defaults Inf. Use fewer rows debug function/parser. verbose Whether print processing status. Defaults FALSE.","code":""},{"path":"https://hauselin.github.io/chatlogr/reference/parse_users_chat_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse all user data — parse_users_chat_data","text":"List info, info_df, json_list, df_success, df_fail keys.","code":""},{"path":"https://hauselin.github.io/chatlogr/reference/parse_users_chat_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse all user data — parse_users_chat_data","text":"","code":"csv_file <- file.path(system.file(\"extdata\", package = \"chatlogr\"), \"mtcars.csv\") chatdata <- parse_users_chat_data(csv_file, \"user_id\") #> Processing 32 rows... #> Parsing summary/status #>    total  success   errors warnings  #>       32        0       32        0"},{"path":"https://hauselin.github.io/chatlogr/reference/read_relevant_data_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Read csv file to get matching data columns — read_relevant_data_columns","title":"Read csv file to get matching data columns — read_relevant_data_columns","text":"Read csv file get matching data columns","code":""},{"path":"https://hauselin.github.io/chatlogr/reference/read_relevant_data_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read csv file to get matching data columns — read_relevant_data_columns","text":"","code":"read_relevant_data_columns(   csv_file,   idcol,   chat_col_patterns = c(\"chathistory\"),   chat_cols = \"\" )"},{"path":"https://hauselin.github.io/chatlogr/reference/read_relevant_data_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read csv file to get matching data columns — read_relevant_data_columns","text":"csv_file Path csv file character. idcol ID column character. chat_col_patterns Patterns match chat columns character. Defaults \"chathistory\". chat_cols Chat columns character. Defaults \"\".","code":""},{"path":"https://hauselin.github.io/chatlogr/reference/read_relevant_data_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read csv file to get matching data columns — read_relevant_data_columns","text":"Dataframe/tibble matching columns.","code":""},{"path":"https://hauselin.github.io/chatlogr/reference/read_relevant_data_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read csv file to get matching data columns — read_relevant_data_columns","text":"","code":"csv_file <- file.path(system.file(\"extdata\", package = \"chatlogr\"), \"mtcars.csv\") dat <- read_relevant_data_columns(csv_file, \"vs\", \"mpg\", \"cyl\")"},{"path":"https://hauselin.github.io/chatlogr/reference/write_to_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write chat history to csv file — write_to_csv","title":"Write chat history to csv file — write_to_csv","text":"Write chat history csv file. include information contained full chat data. save full chat data, use `write_to_json()`.","code":""},{"path":"https://hauselin.github.io/chatlogr/reference/write_to_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write chat history to csv file — write_to_csv","text":"","code":"write_to_csv(chatdata, output_file)"},{"path":"https://hauselin.github.io/chatlogr/reference/write_to_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write chat history to csv file — write_to_csv","text":"chatdata Chat data parse_users_chat_data. output_file Output file name. Must end '.csv'.","code":""},{"path":"https://hauselin.github.io/chatlogr/reference/write_to_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write chat history to csv file — write_to_csv","text":"TRUE successful.","code":""},{"path":"https://hauselin.github.io/chatlogr/reference/write_to_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write chat history to csv file — write_to_csv","text":"","code":"if (FALSE) { # \\dontrun{ write_to_csv(chatdata, \"chatdata.csv\") } # }"},{"path":"https://hauselin.github.io/chatlogr/reference/write_to_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Write chat data to json file — write_to_json","title":"Write chat data to json file — write_to_json","text":"Write chat data json file","code":""},{"path":"https://hauselin.github.io/chatlogr/reference/write_to_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write chat data to json file — write_to_json","text":"","code":"write_to_json(chatdata, output_file)"},{"path":"https://hauselin.github.io/chatlogr/reference/write_to_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write chat data to json file — write_to_json","text":"chatdata Chat data parse_users_chat_data. output_file Output file name. Must end '.json'.","code":""},{"path":"https://hauselin.github.io/chatlogr/reference/write_to_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write chat data to json file — write_to_json","text":"TRUE successful.","code":""},{"path":"https://hauselin.github.io/chatlogr/reference/write_to_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write chat data to json file — write_to_json","text":"","code":"if (FALSE) { # \\dontrun{ write_to_json(chatdata, \"chatdata.json\") } # }"}]
